---

version: 2

jobs:
  main:
    docker:
      - image: circleci/ruby:2.6.3-node
        environment:
          DATABASE_USERNAME: postgres

      - image: postgres
        environment:
          POSTGRES_USER: postgres

    steps:
      - checkout

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler -v "$BUNDLER_VERSION"

      - restore_cache:
          keys:
            - bundler-dependencies-{{ .Environment.BUNDLER_CACHE_INFIX }}-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies
          command: bundle install --path /home/circleci/project/vendor/bundle

      - save_cache:
          key: bundler-dependencies-{{ .Environment.BUNDLER_CACHE_INFIX }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Create and migrate DB
          command: bin/rails db:create db:migrate

      - run:
          name: Run rubocop
          command: bin/rubocop -c .rubocop.yml

      - run:
          name: Run tests
          command: SIMPLECOV=true bin/rspec

      - run:
          name: Download Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-0.6.3-linux-amd64 > /tmp/cc-test-reporter
            chmod +x /tmp/cc-test-reporter

      - run:
          name: Generate code coverage report
          command: /tmp/cc-test-reporter format-coverage --output /tmp/codeclimate.json

      - run:
          name: Upload coverage results to Code Climate
          command: /tmp/cc-test-reporter upload-coverage --input /tmp/codeclimate.json

      - store_artifacts:
          path: /root/project/tmp/screenshots

workflows:
  version: 2

  test_and_deploy:
    jobs:
      - main